# Generated by Django 5.2.6 on 2025-10-23 19:27

import datetime
import django.db.models.expressions
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('hockey', '0014_remove_goalie_birthplace_city_and_more'),
    ]

    operations = [
        migrations.RenameField(
            model_name='gameplayer',
            old_name='shots',
            new_name='shots_on_goal',
        ),
        migrations.AddField(
            model_name='game',
            name='is_deprecated',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='gamegoalie',
            name='shots_against',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='gameplayer',
            name='faceoffs',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='gameplayer',
            name='penalty_minutes',
            field=models.DurationField(default=datetime.timedelta(0)),
        ),
        migrations.AddField(
            model_name='gameplayer',
            name='points',
            field=models.GeneratedField(db_persist=True, expression=django.db.models.expressions.CombinedExpression(models.F('goals'), '+', models.F('assists')), output_field=models.IntegerField()),
        ),
        migrations.AddField(
            model_name='gameplayer',
            name='scoring_chances',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='gameplayer',
            name='turnovers',
            field=models.IntegerField(default=0),
        ),
        migrations.DeleteModel(
            name='GameEventsAnalysisQueue',
        ),
        migrations.AddField(
            model_name='gamegoalie',
            name='save_percents',
            field=models.GeneratedField(db_persist=True, expression=models.Case(models.When(shots_against__gt=0, then=django.db.models.expressions.CombinedExpression(django.db.models.expressions.CombinedExpression(models.F('saves'), '/', models.F('shots_against')), '*', models.Value(100))), default=models.Value(0), output_field=models.FloatField()), output_field=models.FloatField(), verbose_name='Save %'),
        ),
    ]
