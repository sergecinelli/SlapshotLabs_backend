# Generated by Django 5.2.6 on 2025-10-03 22:08

import django.db.models.deletion
import django.db.models.expressions
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Arena',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('address', models.TextField()),
            ],
            options={
                'db_table': 'arenas',
            },
        ),
        migrations.CreateModel(
            name='DefensiveZoneExit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icing', models.IntegerField()),
                ('skate', models.IntegerField()),
                ('so_win', models.IntegerField(verbose_name='SO & Win')),
                ('so_lose', models.IntegerField(verbose_name='SO & Lose')),
                ('passes', models.IntegerField(verbose_name='Pass')),
            ],
            options={
                'db_table': 'defensive_zone_exit',
            },
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'divisions',
            },
        ),
        migrations.CreateModel(
            name='GameEventName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'game_event_names',
            },
        ),
        migrations.CreateModel(
            name='GamePeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'game_periods',
            },
        ),
        migrations.CreateModel(
            name='GameType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'game_types',
            },
        ),
        migrations.CreateModel(
            name='Goalie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.IntegerField()),
                ('weight', models.IntegerField()),
                ('shoots', models.CharField(choices=[('L', 'Left Shot'), ('R', 'Right Shot')], max_length=1)),
                ('jersey_number', models.IntegerField()),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('birth_year', models.DateField()),
                ('shots_on_goal', models.IntegerField(default=0)),
                ('saves', models.IntegerField(default=0)),
                ('goals_against', models.IntegerField(default=0)),
                ('games_played', models.IntegerField(default=0)),
                ('wins', models.IntegerField()),
                ('losses', models.IntegerField()),
                ('goals', models.IntegerField(default=0)),
                ('assists', models.IntegerField(default=0)),
                ('short_handed_goals_against', models.IntegerField(default=0, verbose_name='SHGA')),
                ('power_play_goals_against', models.IntegerField(default=0, verbose_name='PPGA')),
                ('saves_above_avg', models.IntegerField()),
                ('shots_on_goal_per_game', models.GeneratedField(db_persist=True, expression=models.Case(models.When(games_played__gt=0, then=django.db.models.expressions.CombinedExpression(models.F('shots_on_goal'), '/', models.F('games_played'))), default=models.Value(0), output_field=models.FloatField()), output_field=models.FloatField())),
                ('points', models.GeneratedField(db_persist=True, expression=django.db.models.expressions.CombinedExpression(models.F('goals'), '+', models.F('assists')), output_field=models.IntegerField())),
            ],
            options={
                'db_table': 'goalies',
            },
        ),
        migrations.CreateModel(
            name='OffensiveZoneEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passes', models.IntegerField(verbose_name='Pass')),
                ('dump_w', models.IntegerField(verbose_name='Dump/W')),
                ('dump_l', models.IntegerField(verbose_name='Dump/L')),
                ('skate', models.IntegerField()),
            ],
            options={
                'db_table': 'offensive_zone_entry',
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height', models.IntegerField()),
                ('weight', models.IntegerField()),
                ('shoots', models.CharField(choices=[('L', 'Left Shot'), ('R', 'Right Shot')], max_length=1)),
                ('number', models.IntegerField()),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('birth_year', models.DateField()),
                ('shots_on_goal', models.IntegerField(default=0)),
                ('games_played', models.IntegerField(default=0)),
                ('goals', models.IntegerField(default=0)),
                ('assists', models.IntegerField(default=0)),
                ('scoring_chances', models.IntegerField(default=0)),
                ('blocked_shots', models.IntegerField(default=0)),
                ('penalties_drawn', models.IntegerField()),
                ('penalties_taken', models.IntegerField()),
                ('power_play_goals_diff', models.IntegerField(default=0, verbose_name='PP +/-')),
                ('penalty_kill_diff', models.IntegerField(default=0, verbose_name='PK +/-')),
                ('five_on_five_diff', models.IntegerField(default=0, verbose_name='5v5 +/-')),
                ('overall_diff', models.IntegerField(default=0, verbose_name='Overall +/-')),
                ('shots_on_goal_per_game', models.GeneratedField(db_persist=True, expression=models.Case(models.When(games_played__gt=0, then=django.db.models.expressions.CombinedExpression(models.F('shots_on_goal'), '/', models.F('games_played'))), default=models.Value(0), output_field=models.FloatField()), output_field=models.FloatField())),
                ('points', models.GeneratedField(db_persist=True, expression=django.db.models.expressions.CombinedExpression(models.F('goals'), '+', models.F('assists')), output_field=models.IntegerField())),
            ],
            options={
                'db_table': 'players',
            },
        ),
        migrations.CreateModel(
            name='PlayerPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'player_positions',
            },
        ),
        migrations.CreateModel(
            name='Shots',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shots_on_goal', models.IntegerField()),
                ('missed_net', models.IntegerField()),
                ('scoring_chances', models.IntegerField()),
                ('blocked', models.IntegerField()),
            ],
            options={
                'db_table': 'shots',
            },
        ),
        migrations.CreateModel(
            name='TeamLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'team_levels',
            },
        ),
        migrations.CreateModel(
            name='Turnovers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('off_zone', models.IntegerField()),
                ('neutral_zone', models.IntegerField()),
                ('def_zone', models.IntegerField()),
            ],
            options={
                'db_table': 'turnovers',
            },
        ),
        migrations.CreateModel(
            name='ArenaRink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('arena', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hockey.arena')),
            ],
            options={
                'db_table': 'arena_rinks',
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('home_goals', models.IntegerField()),
                ('away_goals', models.IntegerField()),
                ('tournament_name', models.CharField(blank=True, max_length=150, null=True)),
                ('game_status', models.IntegerField(choices=[(1, 'Not Started'), (2, 'Game in Progress'), (3, 'Game Over')])),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('game_type_group', models.CharField(max_length=10)),
                ('home_faceoff_win', models.IntegerField(verbose_name='Home Faceoff Win %')),
                ('away_faceoff_win', models.IntegerField(verbose_name='Away Faceoff Win %')),
                ('arena_rink', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hockey.arenarink')),
                ('away_defensive_zone_exit', models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, related_name='away_game', to='hockey.defensivezoneexit')),
                ('home_defensive_zone_exit', models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, related_name='home_game', to='hockey.defensivezoneexit')),
                ('game_period', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hockey.gameperiod')),
                ('game_type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hockey.gametype')),
                ('away_offensive_zone_entry', models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, related_name='away_game', to='hockey.offensivezoneentry')),
                ('home_offensive_zone_entry', models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, related_name='home_game', to='hockey.offensivezoneentry')),
                ('away_shots', models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, related_name='away_game', to='hockey.shots')),
                ('home_shots', models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, related_name='home_game', to='hockey.shots')),
            ],
            options={
                'db_table': 'games',
            },
        ),
        migrations.CreateModel(
            name='GameGoalie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goals_against', models.IntegerField()),
                ('saves', models.IntegerField()),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hockey.game')),
                ('goalie', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hockey.goalie')),
            ],
            options={
                'db_table': 'game_goalies',
            },
        ),
        migrations.CreateModel(
            name='GamePlayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goals', models.IntegerField()),
                ('assists', models.IntegerField()),
                ('shots', models.IntegerField()),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hockey.game')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hockey.player')),
            ],
            options={
                'db_table': 'game_players',
            },
        ),
        migrations.AddField(
            model_name='player',
            name='position',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hockey.playerposition'),
        ),
        migrations.AddField(
            model_name='goalie',
            name='position',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hockey.playerposition'),
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age_group', models.CharField(max_length=3)),
                ('level', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=150)),
                ('logo', models.ImageField(upload_to='team_logo/')),
                ('city', models.CharField(max_length=100)),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hockey.division')),
            ],
            options={
                'db_table': 'teams',
            },
        ),
        migrations.CreateModel(
            name='PlayerTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.IntegerField()),
                ('date', models.DateField()),
                ('number', models.IntegerField()),
                ('description', models.TextField()),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hockey.player')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hockey.team')),
            ],
            options={
                'db_table': 'player_transactions',
            },
        ),
        migrations.AddField(
            model_name='player',
            name='team',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hockey.team'),
        ),
        migrations.CreateModel(
            name='GoalieTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.IntegerField()),
                ('date', models.DateField()),
                ('number', models.IntegerField()),
                ('description', models.TextField()),
                ('goalie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hockey.goalie')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hockey.team')),
            ],
            options={
                'db_table': 'goalie_transactions',
            },
        ),
        migrations.AddField(
            model_name='goalie',
            name='team',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hockey.team'),
        ),
        migrations.CreateModel(
            name='GameEvents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('time', models.TimeField()),
                ('ice_top_offset', models.IntegerField()),
                ('ice_left_offset', models.IntegerField()),
                ('net_top_offset', models.IntegerField()),
                ('net_left_offset', models.IntegerField()),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hockey.game')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hockey.gameeventname')),
                ('period', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hockey.gameperiod')),
                ('goalie', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hockey.goalie')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hockey.player')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hockey.team')),
            ],
            options={
                'db_table': 'game_events',
            },
        ),
        migrations.AddField(
            model_name='game',
            name='away_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='away_games', to='hockey.team'),
        ),
        migrations.AddField(
            model_name='game',
            name='home_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='home_games', to='hockey.team'),
        ),
        migrations.CreateModel(
            name='TeamSeason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.IntegerField()),
                ('games_played', models.IntegerField()),
                ('goals_for', models.IntegerField()),
                ('goals_against', models.IntegerField()),
                ('wins', models.IntegerField()),
                ('losses', models.IntegerField()),
                ('ties', models.IntegerField()),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hockey.team')),
            ],
            options={
                'db_table': 'team_seasons',
            },
        ),
        migrations.AddField(
            model_name='game',
            name='away_turnovers',
            field=models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, related_name='away_game', to='hockey.turnovers'),
        ),
        migrations.AddField(
            model_name='game',
            name='home_turnovers',
            field=models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, related_name='home_game', to='hockey.turnovers'),
        ),
    ]
