# Generated by Django 5.2.6 on 2025-10-20 19:25

import django.db.models.deletion
import django.db.models.expressions
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('hockey', '0009_remove_goalie_position_alter_goalie_height_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='GoalieSeason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shots_on_goal', models.IntegerField(default=0)),
                ('saves', models.IntegerField(default=0)),
                ('goals_against', models.IntegerField(default=0)),
                ('games_played', models.IntegerField(default=0)),
                ('wins', models.IntegerField(default=0)),
                ('losses', models.IntegerField(default=0)),
                ('goals', models.IntegerField(default=0)),
                ('assists', models.IntegerField(default=0)),
                ('penalty_minutes', models.IntegerField(default=0)),
                ('short_handed_goals_against', models.IntegerField(default=0, verbose_name='SHGA')),
                ('power_play_goals_against', models.IntegerField(default=0, verbose_name='PPGA')),
                ('save_percents', models.GeneratedField(db_persist=True, expression=models.Case(models.When(games_played__gt=0, then=django.db.models.expressions.CombinedExpression(django.db.models.expressions.CombinedExpression(models.F('saves'), '/', django.db.models.expressions.CombinedExpression(models.F('saves'), '+', models.F('goals_against'))), '*', models.Value(100))), default=models.Value(0), output_field=models.FloatField()), output_field=models.FloatField(), verbose_name='Save %')),
                ('shots_on_goal_per_game', models.GeneratedField(db_persist=True, expression=models.Case(models.When(games_played__gt=0, then=django.db.models.expressions.CombinedExpression(models.F('shots_on_goal'), '/', models.F('games_played'))), default=models.Value(0), output_field=models.FloatField()), output_field=models.FloatField())),
                ('points', models.GeneratedField(db_persist=True, expression=django.db.models.expressions.CombinedExpression(models.F('goals'), '+', models.F('assists')), output_field=models.IntegerField())),
                ('goalie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hockey.goalie')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hockey.season')),
            ],
            options={
                'db_table': 'goalie_seasons',
            },
        ),
        migrations.CreateModel(
            name='PlayerSeason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shots_on_goal', models.IntegerField(default=0)),
                ('games_played', models.IntegerField(default=0)),
                ('goals', models.IntegerField(default=0)),
                ('assists', models.IntegerField(default=0)),
                ('scoring_chances', models.IntegerField(default=0)),
                ('blocked_shots', models.IntegerField(default=0)),
                ('penalties_drawn', models.IntegerField(default=0)),
                ('penalty_minutes', models.IntegerField(default=0)),
                ('power_play_goals_diff', models.IntegerField(default=0, verbose_name='PP +/-')),
                ('penalty_kill_diff', models.IntegerField(default=0, verbose_name='PK +/-')),
                ('five_on_five_diff', models.IntegerField(default=0, verbose_name='5v5 +/-')),
                ('overall_diff', models.IntegerField(default=0, verbose_name='Overall +/-')),
                ('short_handed_goals', models.IntegerField(default=0, verbose_name='SHG')),
                ('power_play_goals', models.IntegerField(default=0, verbose_name='PPG')),
                ('faceoffs', models.IntegerField(default=0)),
                ('faceoffs_won', models.IntegerField(default=0)),
                ('turnovers', models.IntegerField(default=0)),
                ('faceoff_win_percents', models.GeneratedField(db_persist=True, expression=models.Case(models.When(games_played__gt=0, then=django.db.models.expressions.CombinedExpression(django.db.models.expressions.CombinedExpression(models.F('faceoffs_won'), '/', models.F('faceoffs')), '*', models.Value(100))), default=models.Value(0), output_field=models.FloatField()), output_field=models.FloatField(), verbose_name='Faceoff Win %')),
                ('shots_on_goal_per_game', models.GeneratedField(db_persist=True, expression=models.Case(models.When(games_played__gt=0, then=django.db.models.expressions.CombinedExpression(models.F('shots_on_goal'), '/', models.F('games_played'))), default=models.Value(0), output_field=models.FloatField()), output_field=models.FloatField())),
                ('points', models.GeneratedField(db_persist=True, expression=django.db.models.expressions.CombinedExpression(models.F('goals'), '+', models.F('assists')), output_field=models.IntegerField())),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hockey.player')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='hockey.season')),
            ],
            options={
                'db_table': 'player_seasons',
            },
        ),
    ]
